AWSTemplateFormatVersion: 2010-09-09
Description: 'Wordpress LoadBalancer Stack'

Parameters:
  PublicSubnet1Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Public Subnet 1"

  PublicSubnet2Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Public Subnet 2"

  PublicSubnet3Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Public Subnet 3"

  PrivateSubnet1Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Private Subnet 1"

  PrivateSubnet2Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Private Subnet 2"

  PrivateSubnet3Id:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Private Subnet 3"

  AlbSecurityGroup:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: "ALB Security Group Id"

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: "VPC Id"

  AlbAcmCertificateArn:
    Type: "String"
    MinLength: "1"
    Description: |
      ARN For ACM Certificate to be used by public (lb.example.com) and internal ALB (admin.example.com)

  HostedZone:
    Type: String
    Description: "Hosted Zone Domain (e.g: example.com)"
    MinLength: 5
    AllowedPattern: '^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$'

  LoadBalancerDnsName:
    Type: "String"
    MinLength: "1"
    Description: DNS Name for load balancer
    Default: "lb"

  PrivateLoadBalancerDnsName:
    Type: "String"
    MinLength: "1"
    Description: DNS Name for private load balancer
    Default: "admin"


Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # this is the default, but is specified here in case it needs to be changed
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      # "internal" is also an option
      Scheme: internet-facing
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Subnets:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id

  PrivateLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # this is the default, but is specified here in case it needs to be changed
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Scheme: internal
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Subnets:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
        - !Ref PrivateSubnet3Id

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      Matcher:
        HttpCode: "200-399"
      HealthCheckTimeoutSeconds: 2
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 2
      Port: 443
      Protocol: HTTPS
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "60" # default is 300
      TargetType: ip
      VpcId: !Ref VpcId

  PrivateTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      Matcher:
        HttpCode: "200-399"
      HealthCheckTimeoutSeconds: 2
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 2
      Port: 443
      Protocol: HTTPS
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "60" # default is 300
      TargetType: ip
      VpcId: !Ref VpcId

  PublicListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref AlbAcmCertificateArn

  PrivateListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref PrivateTargetGroup
          Type: forward
      LoadBalancerArn: !Ref PrivateLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref AlbAcmCertificateArn

  BlockPublicAdminAccess:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Order: 1
          Type: "fixed-response"
          FixedResponseConfig:
            ContentType: "text/html"
            MessageBody: |
              <html><body>
              <h1>403: Forbidden</h1>
              <p>Access to admin is restricted to authorized network users</p>
              </body></html>
            StatusCode: "403"
      Conditions:
        - Field: 'path-pattern'
          PathPatternConfig:
            Values:
              - "*wp-admin*"
      ListenerArn: !Ref PublicListenerHttps
      Priority: 1

  AlbDnsRecords:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub "${LoadBalancerDnsName}.${HostedZone}."
      HostedZoneName: !Sub ${HostedZone}.
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
      Type: A

  PrivateAlbDnsRecords:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub "${PrivateLoadBalancerDnsName}.${HostedZone}."
      HostedZoneName: !Sub ${HostedZone}.
      AliasTarget:
        DNSName: !GetAtt PrivateLoadBalancer.DNSName
        HostedZoneId: !GetAtt PrivateLoadBalancer.CanonicalHostedZoneID
      Type: A

Outputs:
  TargetGroupArn:
    Description: Default target group ARN for wordpress load balancer
    Value: !Ref TargetGroup

  AlbDnsRecord:
    Description: Route53 record value for ALB
    Value: !Ref AlbDnsRecords

  PrivateTargetGroupArn:
    Description: Default target group ARN for wordpress load balancer
    Value: !Ref PrivateTargetGroup

  PrivateAlbDnsRecord:
    Description: Route53 record value for ALB
    Value: !Ref PrivateAlbDnsRecords
